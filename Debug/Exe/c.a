;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 7/5/2016
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <string.h>
;#include <stdio.h>
;#include <math.h>
; #include <assert.h>
;#include <stdlib.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
; void ScanRow();
; void ScanCol();
; //void prepend(char* s, const char* t);
; int machineState=0;
; //0 = entering user
; //1 = entering pass
; //2 = userLoggedIn
; //3 = changing pass
; //4 = entering pass again
;        char temp[10];
;        char temp2[10];
;        int enteredCombination=0;
;        int Col=0;
;        int  Row=0;
;        int found =0;
;        int userIndex=0;
;        int userLoggedIn=0;
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0037 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0038 // Place your code here
; 0000 0039 
; 0000 003A }
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 003E {
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 003F // Place your code here
; 0000 0040 
; 0000 0041 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;void main(void)
; 0000 0044 {
;PCODE: $00000017 VOL: 0
; 0000 0045 // Declare your local variables here
; 0000 0046         int users[10][10];
; 0000 0047 
; 0000 0048         int keypad[4][4];
; 0000 0049         int combination[4]={0,0,0,0};
; 0000 004A         int counter0=0;
; 0000 004B         int tens=1;
; 0000 004C         int i=0,j=0;
; 0000 004D         for(i=0;i<10;i++){
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;	users -> Y+42
;	keypad -> Y+10
;	combination -> Y+2
;	counter0 -> R16,R17
;	tens -> R18,R19
;	i -> R20,R21
;	j -> Y+0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 004E         for(j=0;j<10;j++){
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 004F         users[i][j]=0;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0050         }
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0051 
; 0000 0052 
; 0000 0053         }
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0054         users[0][0] = 0000; //users username
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0055         users[0][1] = 1111; //users password
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0056         users[1][0] = 1111;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0057         users[1][1] = 1111;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0058         users[2][0] = 2222;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0059         users[2][1] = 3333;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 005A 
; 0000 005B         keypad[0][0] = 7;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 005C         keypad[0][1] = 8;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005D         keypad[0][2] = 9;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 005E         keypad[0][3] = -1; //changePass
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 005F         keypad[1][0] = 6;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0060         keypad[1][1] = 5;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0061         keypad[1][2] = 4;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0062         keypad[1][3] = -4;       //Log Out
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0063         keypad[2][0] = 3;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0064         keypad[2][1] = 2;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0065         keypad[2][2] = 1;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0066         keypad[2][3] = -99;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0067         keypad[3][0] = -2; //enter
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0068         keypad[3][1] = 0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0069         keypad[3][2] = -3;      //clear
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006A         keypad[3][3] = -99;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 006B // Input/Output Ports initialization
; 0000 006C // Port A initialization
; 0000 006D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 006E DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 006F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0070 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0071 
; 0000 0072 // Port B initialization
; 0000 0073 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0074 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0075 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0076 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0077 
; 0000 0078 // Port C initialization
; 0000 0079 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 007A // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 007B PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 007C 
; 0000 007D // Port D initialization
; 0000 007E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 007F DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0080 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0081 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0082 
; 0000 0083 // Timer/Counter 0 initialization
; 0000 0084 // Clock source: System Clock
; 0000 0085 // Clock value: Timer 0 Stopped
; 0000 0086 // Mode: Normal top=0xFF
; 0000 0087 // OC0 output: Disconnected
; 0000 0088 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0089 TCNT0=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 008A OCR0=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 008B 
; 0000 008C // Timer/Counter 1 initialization
; 0000 008D // Clock source: System Clock
; 0000 008E // Clock value: Timer1 Stopped
; 0000 008F // Mode: Normal top=0xFFFF
; 0000 0090 // OC1A output: Disconnected
; 0000 0091 // OC1B output: Disconnected
; 0000 0092 // Noise Canceler: Off
; 0000 0093 // Input Capture on Falling Edge
; 0000 0094 // Timer1 Overflow Interrupt: Off
; 0000 0095 // Input Capture Interrupt: Off
; 0000 0096 // Compare A Match Interrupt: Off
; 0000 0097 // Compare B Match Interrupt: Off
; 0000 0098 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0099 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 009A TCNT1H=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 009B TCNT1L=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 009C ICR1H=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 009D ICR1L=0x00;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 009E OCR1AH=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 009F OCR1AL=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00A0 OCR1BH=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00A1 OCR1BL=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00A2 
; 0000 00A3 // Timer/Counter 2 initialization
; 0000 00A4 // Clock source: System Clock
; 0000 00A5 // Clock value: Timer2 Stopped
; 0000 00A6 // Mode: Normal top=0xFF
; 0000 00A7 // OC2 output: Disconnected
; 0000 00A8 ASSR=0<<AS2;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00A9 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00AA TCNT2=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00AB OCR2=0x00;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00AC 
; 0000 00AD // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00AE TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00AF 
; 0000 00B0 // External Interrupt(s) initialization
; 0000 00B1 // INT0: On
; 0000 00B2 // INT0 Mode: Low level
; 0000 00B3 // INT1: On
; 0000 00B4 // INT1 Mode: Low level
; 0000 00B5 // INT2: Off
; 0000 00B6 GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00B7 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00B8 MCUCSR=(0<<ISC2);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 00B9 GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00BA 
; 0000 00BB // USART initialization
; 0000 00BC // USART disabled
; 0000 00BD UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00BE 
; 0000 00BF // Analog Comparator initialization
; 0000 00C0 // Analog Comparator: Off
; 0000 00C1 // The Analog Comparator's positive input is
; 0000 00C2 // connected to the AIN0 pin
; 0000 00C3 // The Analog Comparator's negative input is
; 0000 00C4 // connected to the AIN1 pin
; 0000 00C5 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00C6 SFIOR=(0<<ACME);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00C7 
; 0000 00C8 // ADC initialization
; 0000 00C9 // ADC disabled
; 0000 00CA ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00CB 
; 0000 00CC // SPI initialization
; 0000 00CD // SPI disabled
; 0000 00CE SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00CF 
; 0000 00D0 // TWI initialization
; 0000 00D1 // TWI disabled
; 0000 00D2 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00D3 
; 0000 00D4 // Alphanumeric LCD initialization
; 0000 00D5 // Connections are specified in the
; 0000 00D6 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00D7 // RS - PORTA Bit 0
; 0000 00D8 // RD - PORTA Bit 1
; 0000 00D9 // EN - PORTA Bit 2
; 0000 00DA // D4 - PORTA Bit 3
; 0000 00DB // D5 - PORTA Bit 4
; 0000 00DC // D6 - PORTA Bit 5
; 0000 00DD // D7 - PORTA Bit 6
; 0000 00DE // Characters/line: 16
; 0000 00DF lcd_init(16);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00E0   lcd_gotoxy(0,0);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00E1   lcd_puts("Enter User");
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00E2 
; 0000 00E3 // Global enable interrupts
; 0000 00E4 #asm("sei")
;PCODE: $000000D3 VOL: 0
	sei
;PCODE: $000000D4 VOL: 0
; 0000 00E5     DDRC = 0xF0;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00E6    // PORTC = 0x0F;//enable pull up
; 0000 00E7 while (1)
;PCODE: $000000D7 VOL: 0
; 0000 00E8       {
; 0000 00E9       enteredCombination =0;
;PCODE: $000000D8 VOL: 0
; 0000 00EA       // Place your code here
; 0000 00EB 
; 0000 00EC  DDRC=0xf0;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00ED 
; 0000 00EE     PORTC=0x0f;    //enable pull up
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00EF 
; 0000 00F0     while((PORTC&PINC)==0x0f);{
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 00F1     ScanRow();
;PCODE: $000000E6 VOL: 0
; 0000 00F2                                }
; 0000 00F3     DDRC=0x0f;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00F4 
; 0000 00F5     PORTC=0xf0;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00F6 
; 0000 00F7     while((PORTC&PINC)==0xf0);  {
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00F8     ScanCol();
;PCODE: $000000F4 VOL: 0
; 0000 00F9 
; 0000 00FA 
; 0000 00FB     }
; 0000 00FC     //log Out
; 0000 00FD     if(keypad[Row][Col]== -4){
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00FE    sprintf(temp,"");
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00FF    counter0=0;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0100    machineState=0;
;PCODE: $0000010A VOL: 0
; 0000 0101    lcd_clear();
;PCODE: $0000010B VOL: 0
; 0000 0102    lcd_gotoxy(0,0);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0103    lcd_puts("Enter User");
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0104    continue;
;PCODE: $00000113 VOL: 0
; 0000 0105 
; 0000 0106     }
; 0000 0107     //Clear
; 0000 0108     if(keypad[Row][Col]== -3){
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 0109     counter0=0;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 010A     sprintf(temp,"");
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 010B     lcd_clear();
;PCODE: $0000012A VOL: 0
; 0000 010C 
; 0000 010D     continue;
;PCODE: $0000012B VOL: 0
; 0000 010E 
; 0000 010F 
; 0000 0110     }
; 0000 0111     //ChangePass
; 0000 0112     if(keypad[Row][Col] == -1){
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 0113 
; 0000 0114     if(machineState == 2){
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0115 
; 0000 0116     lcd_clear();
;PCODE: $0000013A VOL: 0
; 0000 0117     lcd_gotoxy(0,0);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 0118     lcd_puts("Enter New Pass");
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 0119     machineState++;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 011A     counter0=0;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 011B     sprintf(temp,"");
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 011C 
; 0000 011D 
; 0000 011E 
; 0000 011F     }else if(machineState <2) {
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0120     lcd_clear();
;PCODE: $00000155 VOL: 0
; 0000 0121     lcd_gotoxy(0,0);
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0122     lcd_puts("log in first");
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0123     machineState=0;
;PCODE: $0000015D VOL: 0
; 0000 0124     counter0=0;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0125     sprintf(temp,"");
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 0126 
; 0000 0127 
; 0000 0128     }
; 0000 0129 
; 0000 012A     continue;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 012B 
; 0000 012C 
; 0000 012D     }
; 0000 012E     //submit new password
; 0000 012F      if((keypad[Row][Col]== -2) && (machineState==3) && (counter0 == 4)){
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 0130 
; 0000 0131       for(i=0;i<=3;i++){
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 0132         for(j=3;j>i;j--){
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 0133             tens = 10*tens;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 0134         }
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0135         enteredCombination += tens* combination[i];
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 0136 
; 0000 0137         tens = 1;
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 0138     }
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0139 
; 0000 013A      users[userIndex][1] = enteredCombination;
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 013B      lcd_clear();
;PCODE: $000001B5 VOL: 0
; 0000 013C      lcd_gotoxy(0,0);
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 013D      sprintf(temp,"u:%d p:%d",users[userIndex][0],users[userIndex][1]);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 013E      lcd_puts(temp);
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 013F     counter0 = 0;
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0140     machineState=2;
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 0141     sprintf(temp,"");
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 0142 
; 0000 0143     continue;
;PCODE: $000001E3 VOL: 0
; 0000 0144 
; 0000 0145     }
; 0000 0146     //check users
; 0000 0147      if((keypad[Row][Col]== -2) && (machineState==0) && (counter0 == 4)){
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0148     lcd_clear();
;PCODE: $000001F8 VOL: 0
; 0000 0149     lcd_gotoxy(0,0);
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 014A 
; 0000 014B     for(i=0;i<=3;i++){
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 014C         for(j=3;j>i;j--){
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 014D             tens = 10*tens;
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 014E         }
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 014F         enteredCombination += tens* combination[i];
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 0150 
; 0000 0151         tens = 1;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 0152     }
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 0153     lcd_clear();
;PCODE: $0000022A VOL: 0
; 0000 0154     lcd_gotoxy(0,0);
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 0155    // sprintf(temp,"%d",enteredCombination);
; 0000 0156     //lcd_puts(temp);
; 0000 0157     //delay_ms(500);
; 0000 0158     for(i=0;i<10;i++){
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 0159       if(users[i][0] == enteredCombination){
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 015A 
; 0000 015B       found = 1;
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 015C       machineState++;
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 015D       counter0=0;
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 015E       userIndex = i;
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 015F       sprintf(temp,"");
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 0160     lcd_clear();
;PCODE: $00000251 VOL: 0
; 0000 0161     lcd_gotoxy(0,0);
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 0162     lcd_puts("enter pass");
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0163     break;
;PCODE: $00000259 VOL: 0
; 0000 0164 
; 0000 0165       }
; 0000 0166     }
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 0167     if(found == 0){
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 0168       sprintf(temp,"");
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 0169       lcd_clear();
;PCODE: $0000026B VOL: 0
; 0000 016A       lcd_gotoxy(0,0);
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 016B       lcd_puts("no user");
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 016C       counter0=0;
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 016D 
; 0000 016E     }
; 0000 016F     found =0;
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 0170     }
; 0000 0171     //check password
; 0000 0172      if((keypad[Row][Col]== -2) && (machineState==1) && (counter0 == 4)){
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 0173     lcd_clear();
;PCODE: $0000028C VOL: 0
; 0000 0174     lcd_gotoxy(0,0);
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0175 
; 0000 0176     for(i=0;i<=3;i++){
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 0177         for(j=3;j>i;j--){
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 0178             tens = 10*tens;
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 0179         }
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 017A         enteredCombination += tens* combination[i];
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 017B 
; 0000 017C         tens = 1;
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 017D     }
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 017E     if(users[userIndex][1] == enteredCombination){
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 017F 
; 0000 0180     lcd_clear();
;PCODE: $000002C7 VOL: 0
; 0000 0181     lcd_gotoxy(0,0);
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 0182     lcd_puts("access granted");
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 0183     machineState++;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 0184 
; 0000 0185     }else{
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 0186     lcd_clear();
;PCODE: $000002D4 VOL: 0
; 0000 0187     lcd_gotoxy(0,0);
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 0188     lcd_puts("incorrect password");
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 0189 
; 0000 018A 
; 0000 018B     }
;PCODE: $000002DC VOL: 0
; 0000 018C     sprintf(temp,"");
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
; 0000 018D     counter0=0;
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 018E     continue;
;PCODE: $000002E8 VOL: 0
; 0000 018F     // sprintf(temp,"%d",enteredCombination);
; 0000 0190     //lcd_puts(temp);
; 0000 0191     //delay_ms(500);
; 0000 0192 
; 0000 0193 
; 0000 0194     }
; 0000 0195 
; 0000 0196 
; 0000 0197 
; 0000 0198 
; 0000 0199    // combination += pow(10,(float)counter0)*keypad[Row][Col];
; 0000 019A     if(keypad[Row][Col] != -2 && counter0<4){
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 019B 
; 0000 019C     lcd_gotoxy(0,0);
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 019D     lcd_clear();
;PCODE: $000002FF VOL: 0
; 0000 019E     combination[counter0]= keypad[Row][Col];
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 019F     sprintf(temp2,"%d",combination[counter0++]);
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 01A0     strcat(temp,temp2);
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 01A1 
; 0000 01A2    // sprintf(temp,"%d%d%d%d t:",combination[3],combination[2],combination[1],combination[0]);
; 0000 01A3       //prepend(temp2,temp);
; 0000 01A4     //sprintf(temp,"%d",combination);
; 0000 01A5 
; 0000 01A6     lcd_puts(temp);
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 01A7     //check user exist
; 0000 01A8     }
; 0000 01A9 
; 0000 01AA     //counter0++;
; 0000 01AB 
; 0000 01AC     delay_ms(500);
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
; 0000 01AD      }
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 01AE }
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0

	.DSEG
_0xA:
	.BYTE 0x67
;void ScanRow()
; 0000 01B0 
; 0000 01B1 {

	.CSEG
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
; 0000 01B2 
; 0000 01B3     switch(PINC & 0x0f)
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 01B4 
; 0000 01B5     {
; 0000 01B6 
; 0000 01B7        case 0x07:Row=3;break;
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
; 0000 01B8 
; 0000 01B9        case 0x0b:Row=2;break;
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
; 0000 01BA 
; 0000 01BB        case 0x0d:Row=1;break;
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
; 0000 01BC 
; 0000 01BD        case 0x0e:Row=0;break;
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 01BE 
; 0000 01BF     }
;PCODE: $0000034A VOL: 0
; 0000 01C0 
; 0000 01C1 }
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;
;
;
;void ScanCol()
; 0000 01C6 
; 0000 01C7 {
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
; 0000 01C8 
; 0000 01C9     switch(PINC & 0xf0)
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 01CA 
; 0000 01CB     {
; 0000 01CC 
; 0000 01CD                 case 0x70:Col=3;break;
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
; 0000 01CE 
; 0000 01CF                 case 0xb0:Col=2;break;
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0000 01D0 
; 0000 01D1                 case 0xd0:Col=1;break;
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
; 0000 01D2 
; 0000 01D3                 case 0xe0:Col=0;break;
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 01D4 
; 0000 01D5             }
;PCODE: $00000367 VOL: 0
; 0000 01D6 
; 0000 01D7 }
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
